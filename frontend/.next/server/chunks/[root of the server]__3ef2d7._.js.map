{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/stone/OneDrive/Documents/1SWE_Projects/LinkedIn-To-Resume/frontend/app/api/generate-resume/%5BprofileId%5D/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\n\r\nexport async function POST(\r\n  request: NextRequest,\r\n  { params }: { params: { profileId: string } }\r\n) {\r\n  try {\r\n    const themeOptions = await request.json();\r\n\r\n    const response = await fetch(\r\n      `http://127.0.0.1:5000/api/generate-resume/${params.profileId}`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(themeOptions),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Backend responded with status: ${response.status}`);\r\n    }\r\n\r\n    // Get the PDF file from the response\r\n    const pdfBuffer = await response.arrayBuffer();\r\n\r\n    // Return the PDF with appropriate headers\r\n    return new NextResponse(pdfBuffer, {\r\n      headers: {\r\n        \"Content-Type\": \"application/pdf\",\r\n        \"Content-Disposition\": `attachment; filename=\"resume_${params.profileId}.pdf\"`,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error in generate-resume route:\", error);\r\n    return NextResponse.json(\r\n      {\r\n        error:\r\n          error instanceof Error ? error.message : \"Failed to generate resume\",\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,KACpB,OAAoB,EACpB,EAAE,MAAM,EAAqC;IAE7C,IAAI;QACF,MAAM,eAAe,MAAM,QAAQ,IAAI;QAEvC,MAAM,WAAW,MAAM,MACrB,CAAC,0CAA0C,EAAE,OAAO,SAAS,EAAE,EAC/D;YACE,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;QACvB;QAGF,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,+BAA+B,EAAE,SAAS,MAAM,EAAE;QACrE;QAEA,qCAAqC;QACrC,MAAM,YAAY,MAAM,SAAS,WAAW;QAE5C,0CAA0C;QAC1C,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,WAAW;YACjC,SAAS;gBACP,gBAAgB;gBAChB,uBAAuB,CAAC,6BAA6B,EAAE,OAAO,SAAS,CAAC,KAAK,CAAC;YAChF;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mCAAmC;QACjD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,OACE,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAC7C,GACA;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}